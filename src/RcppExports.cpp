// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "khermisc_types.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// chunkCpp
DoubleMat chunkCpp(const DoubleVec& x, const Int& chunkSize, const Int& overlap);
RcppExport SEXP _khermisc_chunkCpp(SEXP xSEXP, SEXP chunkSizeSEXP, SEXP overlapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const DoubleVec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Int& >::type chunkSize(chunkSizeSEXP);
    Rcpp::traits::input_parameter< const Int& >::type overlap(overlapSEXP);
    rcpp_result_gen = Rcpp::wrap(chunkCpp(x, chunkSize, overlap));
    return rcpp_result_gen;
END_RCPP
}
// rowMaxCpp
DoubleVec rowMaxCpp(const DoubleMat& x);
RcppExport SEXP _khermisc_rowMaxCpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const DoubleMat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rowMaxCpp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_khermisc_chunkCpp", (DL_FUNC) &_khermisc_chunkCpp, 3},
    {"_khermisc_rowMaxCpp", (DL_FUNC) &_khermisc_rowMaxCpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_khermisc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
